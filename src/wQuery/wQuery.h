#ifdef WIN32
#include <stdlib.h>
#include <tchar.h>
#include <winsock2.h>
#else
#include <sys/socket.h>
#include <netinet/in.h>
#endif

#include <stdio.h>
#include <math.h>
#include <time.h>


/**************************************************
 * 函数名: init_query                             *
 * 功能:   初始化查询,分配内存以及读入必要数据    *
 * 参数:   bk - 是否为无引擎版。1-无引擎，0-有引擎*
 *         dd - 如果 bk 为1，则 dd 表示查询服务器 *
 *              ip地址。如果 bk 为 0，则 dd 表示  *
 *              索引文件所在的路径                *
 *         bigmem - 如果 bk 为 1，则 bigmem 表示  *
 *                  查询服务器的端口信息。如果 bk *
 *                  为 0，则表示是否大内存版。    *
 * 举例:   init_index(0,"166.111.3.125",3465)     *
 *         init_index(1,"c:\\test\\",0)           *
 * 返回:   0表示成功，-1表示失败                  *
 **************************************************/
int init_query(int bk, char * dd, int bigmem);
/**************************************************
 * 函数名: done_query                             *
 * 功能:   结束查询任务,清除内存以及保存必要数据  *
 * 参数:   无                                     *
 * 返回:   0表示成功，-1表示失败                  *
 **************************************************/
int done_query();
/**************************************************
 * 函数名: highlight                              *
 * 功能:   将查到的文件的选择部分内容用<B> </B>   *
 *         进行标识。                             *
 * 参数:   fn - 文件名称，包含路径                *
 *         qn - 所查询的关键字                    *
 * 返回:   长字符串，表示标识结果                 *
 **************************************************/
char * highlight(char * fn, char * qn, char * preTag, char * postTag);
char * highlight_content(char * content, int len, char * qn, char * preTag, char * postTag);
/**************************************************
 * 函数名: do_query                               *
 * 功能:   执行查询任务                           *
 * 参数:   i - 从第i条查起，i从0开始              *
 *         j - 查询j条记录。实际查到结果可能小于j *
 *         q - 查询关键字                         *
 * 返回:   实际查询到的结果数目                   *
 **************************************************/
int do_query(int i, int j, char * q);
/**************************************************
 * 函数名: fetch_total                            *
 * 功能:   执行查询任务之后，fetch_total返回总共  *
 *         查询到多少条数据                       *
 * 参数:   无                                     *
 * 返回:   该关键字共有多少查询结果               *
 **************************************************/
int fetch_total();
/**************************************************
 * 函数名: fetch                                  *
 * 功能:   执行查询任务之后，fetch依次得到每一个  *
 *         查询结果。                             *
 * 参数:   filename - 输出文件名                  *
 *         title    - 输出文件标题                *
 *         tag      - 输出附加内容                *
 * 返回:   始终0                                  *
 **************************************************/
int wfetch(char * dataid, char * title, char * tag);
